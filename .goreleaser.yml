project_name: forwarder

before:
  hooks:
    - ./packaging/config.sh
    - ./packaging/completions.sh

changelog:
  use: github-native

source:
  enabled: false

builds:
  - main: ./cmd/forwarder
    env:
      - CGO_ENABLED=0
    flags:
      - -trimpath
    ldflags:
      - -extldflags '-static'
      - -X 'github.com/saucelabs/forwarder/internal/version.Version={{ .Version }}'
      - -X 'github.com/saucelabs/forwarder/internal/version.Time={{ .Date }}'
      - -X 'github.com/saucelabs/forwarder/internal/version.Commit={{ .Commit }}'
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64

universal_binaries:
  - replace: true

checksum:
  name_template: "checksums"

archives:
  - name_template: >-
      {{ .ProjectName }}-{{ .Version }}_{{ .Os }}.
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "arm64" }}aarch64
      {{- else }}{{ .Arch }}{{ end }}

    files:
      - forwarder.yaml
      - completions/*
      - LICENSE
      - LICENSE.3RD_PARTY
    format: zip
    format_overrides:
      - goos: linux
        format: tar.gz

brews:
  - repository:
      owner: saucelabs
      name: homebrew-tap
      token: "{{ .Env.TAP_GITHUB_TOKEN }}"
    folder: Formula
    goarm: "7"
    homepage: https://github.com/saucelabs/forwarder
    description: Fast HTTP(S) proxy with PAC support
    license: MPL-2.0
    test: |
      system "#{bin}/forwarder version"
    install: |-
      bin.install "forwarder"
      bash_completion.install "completions/forwarder.bash" => "forwarder"
      zsh_completion.install "completions/forwarder.zsh" => "_forwarder"
      fish_completion.install "completions/forwarder.fish"

nfpms:
  - package_name: "{{ .ProjectName }}"
    file_name_template: "{{ .ProjectName }}-{{ .Version }}_{{ .Os }}.{{ .Arch }}"
    vendor: Sauce Labs
    maintainer: "Sauce Connect Team"
    description: "Sauce Labs Forwarder"
    license: Mozilla Public License 2.0
    formats:
      - deb
      - rpm
    bindir: /usr/bin

    contents:
      - src: packaging/systemd/forwarder.service
        dst: /usr/lib/systemd/system/forwarder.service
      - src: packaging/forwarder.env
        dst: /etc/default/forwarder
        type: "config|noreplace"
      - src: forwarder.yaml
        dst: /etc/forwarder/forwarder.yaml
        type: "config|noreplace"
      - src: completions/forwarder.bash
        dst: /usr/share/bash-completion/completions/forwarder
        file_info:
          mode: 0644
      - src: completions/forwarder.fish
        dst: /usr/share/fish/vendor_completions.d/forwarder.fish
        file_info:
          mode: 0644
      - src: completions/forwarder.zsh
        dst:  /usr/share/zsh/vendor-completions/_forwarder
        file_info:
          mode: 0644
      - src: LICENSE
        dst: /usr/share/doc/forwarder/LICENSE
      - src: LICENSE.3RD_PARTY
        dst: /usr/share/doc/forwarder/LICENSE.3RD_PARTY
    rpm:
      group: Applications/Internet
      compression: xz
    overrides:
      deb:
        file_name_template: "{{ .ProjectName }}_{{ .Version }}.{{ .Os }}_{{ .Arch }}"
        scripts:
          preinstall: packaging/deb/forwarder.preinst
          postinstall: packaging/deb/forwarder.postinst
          preremove: packaging/deb/forwarder.prerm
          postremove: packaging/deb/forwarder.postrm
      rpm:
        file_name_template: >-
          {{ .ProjectName }}-{{ .Version }}_{{ .Os }}.
          {{- if eq .Arch "amd64" }}x86_64
          {{- else if eq .Arch "arm64" }}aarch64
          {{- else }}{{ .Arch }}{{ end }}
        scripts:
          preinstall: packaging/rpm/forwarder.preinst
          postinstall: packaging/rpm/forwarder.postinst
          preremove: packaging/rpm/forwarder.prerm
          postremove: packaging/rpm/forwarder.postrm

dockers:
  - image_templates:
      - "saucelabs/{{ .ProjectName }}:{{ if .IsSnapshot }}{{ .Tag }}{{ else }}{{ .Version }}{{ end }}-amd64"
    use: buildx
    goos: linux
    goarch: amd64
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
    extra_files:
      - LICENSE
      - LICENSE.3RD_PARTY
  - image_templates:
      - "saucelabs/{{ .ProjectName }}:{{ if .IsSnapshot }}{{ .Tag }}{{ else }}{{ .Version }}{{ end }}-arm64v8"
    use: buildx
    goos: linux
    goarch: arm64
    goarm: 8
    build_flag_templates:
      - "--platform=linux/arm64/v8"
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.title={{ .ProjectName }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Version }}"
    extra_files:
      - LICENSE
      - LICENSE.3RD_PARTY

docker_manifests:
    - name_template: "saucelabs/{{ .ProjectName }}:{{ .Major }}.{{ .Minor }}"
      image_templates:
        - "saucelabs/{{ .ProjectName }}:{{ if .IsSnapshot }}{{ .Tag }}{{ else }}{{ .Version }}{{ end }}-amd64"
        - "saucelabs/{{ .ProjectName }}:{{ if .IsSnapshot }}{{ .Tag }}{{ else }}{{ .Version }}{{ end }}-arm64v8"
    - name_template: "saucelabs/{{ .ProjectName }}:latest"
      image_templates:
        - "saucelabs/{{ .ProjectName }}:{{ if .IsSnapshot }}{{ .Tag }}{{ else }}{{ .Version }}{{ end }}-amd64"
        - "saucelabs/{{ .ProjectName }}:{{ if .IsSnapshot }}{{ .Tag }}{{ else }}{{ .Version }}{{ end }}-arm64v8"

